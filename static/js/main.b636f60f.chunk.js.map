{"version":3,"sources":["components/heading/heading.jsx","components/pokecards/pokecards.jsx","components/regions/regionpokemon.jsx","App.js","reportWebVitals.js","index.js"],"names":["Heading","style","fontFamily","fontSize","PokeCards","pokemon","url","useState","pokemonName","setPokemonName","pokemonImage","setPokemonImage","pokemonShinyImage","setPokemonShinyImage","pokemonTypes","setPokemonTypes","pokemonMoves","setPokemonMoves","pokemonAbilities","setPokemonAbilities","pokemonStatNames","setPokemonStatNames","pokemonStats","setPokemonStats","pokemonId","setPokemonId","useEffect","axios","get","concat","then","res","console","log","data","name","id","sprites","front_default","front_shiny","types","map","index","type","moves","move","abilities","ability","stats","base_stat","stat","capitalizeName","lowerLetterString","toLowerCase","appendedString","charAt","toUpperCase","slice","finalAppendedString","words","split","length","Map","set","getTypeColors","className","src","alt","color","border","borderRadius","margin","backgroundColor","marginLeft","marginRight","names","align","RegionPokemon","kantoPokemon","setKantoPokemon","johtoPokemon","setJohtoPokemon","hoennPokemon","setHoennPokemon","sinnohPokemon","setSinnohPokemon","unovaPokemon","setUnovaPokemon","results","setNames","event","target","value","updatePokemonName","width","onChange","option","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b636f60f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Heading = () => {\r\n    return(\r\n        <div style = {{fontFamily:'Iceland', fontSize:40}}>\r\n            PokeDex\r\n            <div>\r\n                Gotta catch-em all!\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './pokecards.scss';\r\n\r\nconst PokeCards = ({pokemon}) => {\r\n    const url = 'https://pokeapi.co/api/v2/pokemon/';\r\n    const [pokemonName, setPokemonName] = useState('');\r\n    const [pokemonImage, setPokemonImage] = useState('');\r\n    const [pokemonShinyImage, setPokemonShinyImage] = useState('');\r\n    const [pokemonTypes, setPokemonTypes] = useState([]);\r\n    const [pokemonMoves, setPokemonMoves] = useState([]);\r\n    const [pokemonAbilities, setPokemonAbilities] = useState([]);\r\n    const [pokemonStatNames, setPokemonStatNames] = useState([]);\r\n    const [pokemonStats, setPokemonStats] = useState([]);\r\n    const [pokemonId, setPokemonId] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.get(url.concat(`${pokemon}`))\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n\r\n\r\n        axios.get(url.concat(`${pokemon}`))\r\n        .then(res => {\r\n            setPokemonName(pokemon? res.data.name : null);\r\n            setPokemonId(pokemon? res.data.id : null);\r\n            setPokemonImage( pokemon ? res.data.sprites.front_default : null);\r\n            setPokemonShinyImage(pokemon ? res.data.sprites.front_shiny : null);  \r\n            setPokemonTypes(!pokemon ? null : res.data.types.map((pokemon,index)=>{\r\n                return pokemon.type.name;\r\n            }))\r\n            setPokemonMoves(!pokemon ? null : res.data.moves.map((pokemon,index)=> {\r\n                return pokemon.move.name;\r\n            }))\r\n            setPokemonAbilities(!pokemon ? null : res.data.abilities.map((pokemon,index)=> {\r\n                return pokemon.ability.name;\r\n            }))\r\n            setPokemonStats(!pokemon ? null :res.data.stats.map((pokemon,index)=> {\r\n                return pokemon.base_stat;\r\n            }))\r\n            setPokemonStatNames(!pokemon ? null :res.data.stats.map((pokemon,index)=>{\r\n                return pokemon.stat.name;\r\n            }))\r\n            \r\n        })\r\n    },[pokemon])\r\n\r\n    const getTypeColors = (map) => {\r\n        map.set('water','cyan');\r\n        map.set('normal','white');\r\n        map.set('fire','orange');\r\n        map.set('grass','green');\r\n        map.set('electric','yellow');\r\n        map.set('ice','powderblue');\r\n        map.set('fighting','darkred');\r\n        map.set('poison','purple');\r\n        map.set('ground','brown');\r\n        map.set('flying','turquoise');\r\n        map.set('psychic','pink');\r\n        map.set('bug','gold');\r\n        map.set('rock','maroon');\r\n        map.set('ghost','lavender');\r\n        map.set('dark','darkgray');\r\n        map.set('dragon','indigo');\r\n        map.set('steel','sienna');\r\n        \r\n        return map;\r\n    }\r\n\r\n    const capitalizeName = (name) => {\r\n        if(!name) return \"\";\r\n\r\n        let lowerLetterString = name.toLowerCase();\r\n        let firstCharacter = lowerLetterString.charAt(0);\r\n\r\n        let upperFirstCharacter = firstCharacter.toUpperCase();\r\n        let remainingString = lowerLetterString.slice(1);\r\n        let appendedString = '';\r\n        appendedString = upperFirstCharacter + remainingString;\r\n        let finalAppendedString = ''\r\n        let finalString = '';\r\n\r\n        for(let c of appendedString){\r\n            if(c === '-'){\r\n                let words = appendedString.split('-');\r\n                for(let word of words){\r\n                    let lowerLetterString = word.toLowerCase();\r\n                    let firstCharacter = lowerLetterString.charAt(0);\r\n\r\n                    let upperFirstCharacter = firstCharacter.toUpperCase();\r\n                    let remainingString = lowerLetterString.slice(1);\r\n\r\n                    finalString = upperFirstCharacter + remainingString;\r\n                    finalAppendedString += finalString;\r\n                    finalAppendedString += ' '\r\n                    \r\n                }\r\n                finalAppendedString.slice(0,finalAppendedString.length-1);\r\n                return finalAppendedString;\r\n            }\r\n        }\r\n        return appendedString;\r\n    }\r\n\r\n    const fullCapitalize = (name) => {\r\n        if(!name) return \"\";\r\n        return name.toUpperCase();\r\n    }\r\n    let map = new Map();\r\n    map = getTypeColors(map);\r\n    return(\r\n        <>\r\n        <div>\r\n            <div>\r\n                <img className = 'pokemonImages' src = {pokemonImage} alt = {pokemon} />\r\n                <img className = 'pokemonImages' src = {pokemonShinyImage} alt = {pokemon} />\r\n                </div>\r\n            \r\n            {!pokemonId ? null :<div>\r\n                <b>{pokemonId}. {capitalizeName(pokemonName)}</b>\r\n            </div>}\r\n            \r\n\r\n            {!pokemonTypes ? null :<div>\r\n                <b>Type:</b> {!pokemonTypes ? null :pokemonTypes.map((type,index)=>{\r\n                  return  <span key = {index} style = {{color: map.get(type),\r\n                    border: \"0px solid black\", borderRadius : 5, margin: 5}}> {capitalizeName(type)} </span>\r\n                })}\r\n            </div>}\r\n\r\n            {!pokemonAbilities ? null :<div style = {{border: \"0px solid black\",\r\n              borderRadius: 10}}>\r\n                <b>Abilities:</b> {!pokemonAbilities ? null :pokemonAbilities.map((ability,index)=> {\r\n                    return <span key = {index}> {capitalizeName(ability)} </span>\r\n                })}\r\n            </div>}\r\n\r\n            \r\n            {!pokemonMoves ? null :<div style = {{border: \"1px solid black\",\r\n             backgroundColor:'springgreen', borderRadius: 10, margin:5}}>\r\n                <b>Moves: </b> {pokemonMoves.map((move,index)=> {\r\n                    return <span key = {index} style = {{marginLeft: 10}}> {capitalizeName(move)}  </span>\r\n                })}\r\n            </div>}\r\n            \r\n            {!pokemonStats ? null :<div style = {{margin:10}}><b>Stats:</b>\r\n                <table style = {{border: \"1px solid black\", marginLeft:'auto', marginRight:'auto',\r\n            backgroundColor:'violet', borderRadius:5 }}>\r\n                    <thead >\r\n                        \r\n                            {!pokemonStatNames ? null :<tr>\r\n                                {pokemonStatNames.map((names,index)=> {\r\n                                    return <td key = {index}  style = {{margin:15,align: 'center'}}>\r\n                                        {fullCapitalize(capitalizeName(names))}\r\n                                    </td> \r\n                                })}\r\n                                </tr>}\r\n                        \r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                        \r\n                            {!pokemonStats ? null : <>\r\n                                {pokemonStats.map((stats,index)=> {\r\n                                    return <td style = {{\r\n                                margin: 10}} key = {index}> {stats} </td>\r\n                                })}\r\n                                </>}\r\n                        \r\n                        </tr>\r\n                        </tbody>\r\n                        \r\n                        \r\n                    \r\n                </table>\r\n            </div>}\r\n\r\n        </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokeCards;","import React, {useState,useEffect} from 'react';\r\nimport PokeCards from '../pokecards/pokecards';\r\nimport axios from 'axios';\r\nimport './regionpokemon.scss'\r\n\r\nconst RegionPokemon = ({pokemon}) => {\r\n\r\n    const urlForKanto = 'https://pokeapi.co/api/v2/pokemon?limit=151&offset=0';\r\n    const urlForJohto = 'https://pokeapi.co/api/v2/pokemon?limit=100&offset=151';\r\n    const urlForHoenn = 'https://pokeapi.co/api/v2/pokemon?limit=135&offset=251';\r\n    const urlForSinnoh = 'https://pokeapi.co/api/v2/pokemon?limit=107&offset=386';\r\n    const urlForUnova = 'https://pokeapi.co/api/v2/pokemon?limit=156&offset=493';\r\n    const [kantoPokemon, setKantoPokemon] = useState([]);\r\n    const [johtoPokemon, setJohtoPokemon] = useState([]);\r\n    const [hoennPokemon, setHoennPokemon] = useState([]);\r\n    const [sinnohPokemon, setSinnohPokemon] = useState([]);\r\n    const [unovaPokemon, setUnovaPokemon] = useState([]);\r\n    const [pokemonName, setPokemonName] = useState('');\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.get(urlForKanto)\r\n        .then(res => {\r\n            setKantoPokemon(res.data.results.map((pokemon)=> {\r\n                return pokemon.name;\r\n                \r\n            }))\r\n        })\r\n\r\n        axios.get(urlForJohto)\r\n        .then(res => {\r\n            setJohtoPokemon(res.data.results.map((pokemon)=>{\r\n                return pokemon.name;\r\n            }))\r\n        })\r\n\r\n        axios.get(urlForHoenn)\r\n        .then(res => {\r\n            setHoennPokemon(res.data.results.map((pokemon)=>{\r\n                return pokemon.name;\r\n            }))\r\n        })\r\n\r\n        axios.get(urlForSinnoh)\r\n        .then(res => {\r\n            setSinnohPokemon(res.data.results.map((pokemon)=>{\r\n                return pokemon.name;\r\n            }))\r\n        })\r\n\r\n        axios.get(urlForUnova)\r\n        .then(res => {\r\n            setUnovaPokemon(res.data.results.map((pokemon)=>{\r\n                return pokemon.name;\r\n            }))\r\n        })\r\n\r\n        \r\n    },[]);\r\n\r\n\r\n    const setNames = (event) => {\r\n        setPokemonName(event.target.value);\r\n    }\r\n    const updatePokemonName = (name) => {\r\n        if(!name) return \"\";\r\n        let lowerLetterString = name.toLowerCase();\r\n        let firstCharacter = lowerLetterString.charAt(0);\r\n\r\n        let upperFirstCharacter = firstCharacter.toUpperCase();\r\n        let remainingString = lowerLetterString.slice(1);\r\n\r\n        return upperFirstCharacter + remainingString;\r\n    }\r\n    \r\n    return (\r\n        <div style = {{fontFamily:'Iceland', fontSize:24}} className = 'dropdownSpaces'>\r\n            <select style = {{width: 100, margin: 30}} name = 'regions' id = 'regions' onChange = {setNames}>\r\n                <option value = '' >Kanto</option>\r\n                {kantoPokemon.map((option,index) => \r\n                <option \r\n                key={index} value={option}>{updatePokemonName(option)} \r\n                </option>)\r\n                }\r\n            </select>\r\n            <select style = {{width: 100, margin: 30}} name = 'regions' id = 'regions' onChange = {setNames}>\r\n                <option value = '' >Johto</option>\r\n                {johtoPokemon.map((option,index) => {\r\n                    return (\r\n                    <option key = {index} value = {option}>\r\n                        {updatePokemonName(option)}\r\n                    </option>\r\n                    );\r\n                })}\r\n            </select>\r\n            <select style = {{width: 100, margin: 30}} name = 'regions' id = 'regions' onChange = {setNames}>\r\n                <option value = '' >Hoenn</option>\r\n                {hoennPokemon.map((option,index)=> {\r\n                    return (\r\n                    <option key = {index} value = {option} >\r\n                        {updatePokemonName(option)}\r\n                    </option>\r\n                    );\r\n                })}\r\n            </select>\r\n            <select style = {{width: 100, margin: 30}} name = 'regions' id = 'regions' onChange = {setNames}>\r\n                <option value = '' >Sinnoh</option>\r\n                {sinnohPokemon.map((option,index)=> {\r\n                    return (\r\n                    <option key = {index} value = {option}>\r\n                        {updatePokemonName(option)}\r\n                    </option>\r\n                    );\r\n                })}\r\n            </select>\r\n            <select style = {{width: 100, margin: 30}} name = 'regions' id = 'regions' onChange = {setNames}>\r\n                <option value = '' >Unova</option>\r\n                {unovaPokemon.map((option,index)=> {\r\n                    return (\r\n                        <option key = {index} value = {option}>\r\n                            {updatePokemonName(option)}\r\n                        </option>\r\n                    );\r\n                })}\r\n                \r\n            </select>\r\n            \r\n            <PokeCards pokemon = {pokemonName} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegionPokemon;","import './App.css';\nimport Heading from './components/heading/heading';\nimport Regions from './components/regions/regions';\nimport RegionPokemon from './components/regions/regionpokemon';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Heading />\n      <RegionPokemon />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}